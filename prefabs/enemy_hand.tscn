[gd_scene load_steps=4 format=3 uid="uid://cdc5satbk5akb"]

[sub_resource type="GDScript" id="GDScript_uu4a1"]
resource_name = "hand"
script/source = "extends Area2D

var snap_velocity = 15.0

var cards = []
var card_positions = []

func _ready() -> void:
	Mousebrain.enemy_hand = self

func remove_card(card) -> void:
	cards.erase(card)

func update_card_z_values():
	for idx in range(cards.size()):
		cards[idx].set_sprite_z_index(idx)

func _physics_process(delta: float) -> void:
	for idx in range(cards.size()):
		if cards[idx] != Mousebrain.node_being_dragged:
			cards[idx].global_position = lerp(cards[idx].global_position, calculate_position(idx), snap_velocity * delta)

func calculate_position(idx: float) -> Vector2:
	return Vector2(global_position.x + idx / (cards.size() - 1.0) * ($CollisionShape2D.shape.size.x - cards[idx].size.x),
		global_position.y)

func card_got_dropped(card):
	if Rect2($dropArea/CollisionShape2D.global_position - $dropArea/CollisionShape2D.shape.size / 2.0, $dropArea/CollisionShape2D.shape.size).has_point(get_global_mouse_position()):
		cards.erase(card)
		for idx in range(cards.size()):
			if cards[idx].global_position.x > card.global_position.x:
				cards.insert(idx, card)
				update_card_z_values()
				return
		cards.append(card)
		update_card_z_values()

func add_card(new_card) -> void:
	cards.append(new_card)
"

[sub_resource type="RectangleShape2D" id="RectangleShape2D_uu4a1"]
size = Vector2(611, 125)

[sub_resource type="RectangleShape2D" id="RectangleShape2D_a6gvt"]
size = Vector2(958, 245)

[node name="enemy_hand" type="Area2D"]
script = SubResource("GDScript_uu4a1")

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2(305.5, 62.5)
shape = SubResource("RectangleShape2D_uu4a1")
disabled = true

[node name="dropArea" type="Area2D" parent="."]

[node name="CollisionShape2D" type="CollisionShape2D" parent="dropArea"]
position = Vector2(310, 35.5)
shape = SubResource("RectangleShape2D_a6gvt")
disabled = true
